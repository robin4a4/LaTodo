{"ast":null,"code":"import _toConsumableArray from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport getTodos from './API/getTodos'; // import des composants\n\nimport TodoList from './components/TodoList';\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoForm, _Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n    _this.state = {\n      value: '',\n      isOptionsOpen: false,\n      tagSelection: null,\n      isImportant: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // on envoit le texte et les informations du tag au parent\n      var task = {\n        text: this.state.value,\n        tag: this.state.tagSelection,\n        isImportant: this.state.isImportant\n      };\n      this.props.handleSubmit(task); // on empeche le rechargement de la page\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleOptions\",\n    value: function handleOptions() {\n      // on affiche ou enleve la fenetre d'options \n      this.setState(function (prevState) {\n        return {\n          isOptionsOpen: !prevState.isOptionsOpen\n        };\n      });\n    }\n  }, {\n    key: \"handleTagSelection\",\n    value: function handleTagSelection(tag) {\n      // on affiche ou enleve la fenetre d'options \n      this.setState({\n        tagSelection: tag\n      });\n    }\n  }, {\n    key: \"handleMarkImportant\",\n    value: function handleMarkImportant(tag) {\n      // on toogle le isImportant\n      this.setState(function (prevState) {\n        return {\n          isImportant: !prevState.isImportant\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // classe pour le toogle de la fenetre options\n      var isOptionsOpen = this.state.isOptionsOpen ? null : \"hide\"; // tableau des tags disponibles \n\n      var tagsArray = ['art', 'courrant', 'travail', 'etudes'];\n      var tags = tagsArray.map(function (tag, index) {\n        var isTagSelected = _this2.state.tagSelection === tag ? \"tag-focus\" : null;\n        return React.createElement(\"span\", {\n          key: index,\n          className: isTagSelected + \" tag \" + tag,\n          onClick: function onClick() {\n            return _this2.handleTagSelection(tag);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, tag);\n      });\n      console.log(this.state.isImportant);\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Ajouter une tache\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"more-options-button\",\n        onClick: function onClick() {\n          return _this2.handleOptions();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Options \\u25BC\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"div\", {\n        className: \"form-options-container \" + isOptionsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-options-tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Choisir un tag\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, tags)), React.createElement(\"div\", {\n        className: \"form-options-important\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.state.isImportant ? 'important-focus' : null,\n        onClick: function onClick() {\n          return _this2.handleMarkImportant();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Marquer comme important \\u2691\")))));\n    }\n  }]);\n\n  return TodoForm;\n}(Component);\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TodoItem, _Component2);\n\n  function TodoItem() {\n    _classCallCheck(this, TodoItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoItem).apply(this, arguments));\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var item = this.props.item;\n      var tag = item.tag ? React.createElement(\"div\", {\n        className: \"tag \" + item.tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, item.tag) : null;\n      var important = item.important ? React.createElement(\"div\", {\n        className: \"important\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u2691\") : null;\n      return React.createElement(\"li\", {\n        key: item.id,\n        className: item.done ? 'item-done' : 'item-undone',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: item.done ? 'radio-done' : 'radio-undone',\n        onClick: function onClick() {\n          return _this3.props.handleDone(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u25CB\"), item.text), React.createElement(\"div\", {\n        className: \"item-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, important, tag, React.createElement(\"span\", {\n        className: \"remove\",\n        onClick: function onClick() {\n          return _this3.props.handleRemove(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u2715\")));\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(App, _Component3);\n\n  function App(props) {\n    var _this4;\n\n    _classCallCheck(this, App);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this4.state = {\n      todos: null\n    };\n    return _this4;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      getTodos(function (result) {\n        _this5.setState({\n          todos: result\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(task) {\n      var text = task.text;\n      var tag = task.tag;\n      var isImportant = task.isImportant; // on récupère le max id de la liste pour éviter des problèmes lors de la suppression puis de l'ajout d'un item. \n      // sans cela on recréé \n\n      var maxid = 0;\n      this.state.todos.map(function (obj) {\n        if (obj.id > maxid) maxid = obj.id;\n      }); // on créé un nouvel object item\n\n      var item = {\n        id: maxid + 1,\n        done: false,\n        text: text,\n        tag: tag,\n        important: isImportant // on met à jour le tableau des todo\n\n      };\n      this.setState(function (prevState) {\n        return {\n          todos: [].concat(_toConsumableArray(prevState.todos), [item])\n        };\n      });\n    }\n  }, {\n    key: \"handleDone\",\n    value: function handleDone(id) {\n      // on créé d'abord une copie du state car un state est censé etre immuable        \n      var todos = this.state.todos;\n      console.log(todos);\n      todos.find(function (item) {\n        return item.id === id;\n      }).done = !todos.find(function (item) {\n        return item.id === id;\n      }).done; // on met à jour le tableau des todo\n\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(id) {\n      // on créé d'abord une copie du state car un state est censé etre immuable\n      var todos = this.state.todos;\n      var index = todos.findIndex(function (item) {\n        return item.id === id;\n      });\n      todos.splice(index, 1); // on met à jour le tableau des todo\n\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var todos = this.state.todos;\n      var list = this.state.todos ? React.createElement(TodoList, {\n        todos: todos,\n        handleDone: function handleDone(id) {\n          return _this6.handleDone(id);\n        },\n        handleRemove: function handleRemove(id) {\n          return _this6.handleRemove(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Chargement des taches\");\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logo\",\n        src: \"./logo.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Entrer une tache\"), React.createElement(TodoForm, {\n        handleSubmit: function handleSubmit(value) {\n          return _this6.handleSubmit(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), list));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/App.js"],"names":["React","Component","getTodos","TodoList","TodoForm","props","state","value","isOptionsOpen","tagSelection","isImportant","handleChange","bind","handleSubmit","event","setState","target","task","text","tag","preventDefault","prevState","tagsArray","tags","map","index","isTagSelected","handleTagSelection","console","log","handleOptions","handleMarkImportant","TodoItem","item","important","id","done","handleDone","handleRemove","App","todos","result","maxid","obj","find","findIndex","splice","list"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport getTodos from './API/getTodos'\n\n// import des composants\nimport TodoList from './components/TodoList'\n\nclass TodoForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            isOptionsOpen: false,\n            tagSelection: null,\n            isImportant: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value});\n        \n    }\n\n    handleSubmit(event) {\n        // on envoit le texte et les informations du tag au parent\n        var task = {\n            text: this.state.value,\n            tag: this.state.tagSelection,\n            isImportant: this.state.isImportant\n        }\n        this.props.handleSubmit(task)\n\n        // on empeche le rechargement de la page\n        event.preventDefault();\n    }\n\n    handleOptions(){\n        // on affiche ou enleve la fenetre d'options \n        this.setState(prevState => ({\n            isOptionsOpen: !prevState.isOptionsOpen\n        }))\n    }\n\n    handleTagSelection(tag){\n        // on affiche ou enleve la fenetre d'options \n        this.setState({\n            tagSelection: tag\n        })\n    }\n\n    handleMarkImportant(tag){\n        // on toogle le isImportant\n        this.setState(prevState => ({\n            isImportant: !prevState.isImportant\n        }))\n\n    }\n\n    render(){\n        // classe pour le toogle de la fenetre options\n        var isOptionsOpen = this.state.isOptionsOpen ? null : \"hide\"\n\n        // tableau des tags disponibles \n        var tagsArray = ['art', 'courrant', 'travail', 'etudes']\n        var tags = tagsArray.map((tag, index)=>{\n\n            var isTagSelected = this.state.tagSelection === tag ? \"tag-focus\" : null\n        \n            return(\n                <span \n                key={index}\n                className={isTagSelected+ \" tag \"+tag}\n                onClick={()=>this.handleTagSelection(tag)}\n                >\n                    {tag}\n                </span>\n        )})\n\n        console.log(this.state.isImportant)\n\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-searchBar\">\n\n                    \n                    <input\n                    type=\"text\"\n                    placeholder=\"Ajouter une tache\"\n                    value={this.state.value} \n                    onChange={this.handleChange}\n                    />\n                    <div \n                    className=\"more-options-button\"\n                    onClick={()=>this.handleOptions()}\n                    >\n                    Options ▼\n                    </div>\n                    <button type=\"submit\">+</button>\n\n                </div>\n                <div className={\"form-options-container \"+ isOptionsOpen }>\n                    <div className=\"form-options\">\n                        <div className=\"form-options-tags\">\n                            <p>Choisir un tag</p>\n                            <div>\n                                {tags}\n                            </div>\n                        </div>\n                        <div className=\"form-options-important\">\n                            <span \n                            className={this.state.isImportant ? 'important-focus' : null}\n                            onClick={()=>this.handleMarkImportant()}>\n                                Marquer comme important ⚑\n                            </span>\n                        </div>\n                        \n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nclass TodoItem extends Component {\n\n\n    render(){\n\n        var item = this.props.item\n        \n        var tag = item.tag ? (\n            <div className={\"tag \" + item.tag}>\n                {item.tag}\n            </div>\n        ) : null\n        var important = item.important ? (\n            <div className=\"important\">\n                ⚑\n            </div>\n        ) : null\n        return(\n            <li key={item.id} className={item.done ? 'item-done' : 'item-undone'} >\n                \n                \n                <div className=\"item-left\">\n                    <span \n                    className={item.done ? 'radio-done' : 'radio-undone'} \n                    onClick={()=>this.props.handleDone(item.id)}>\n                        &#9675;\n                    </span>\n                    {item.text}\n                </div>\n                <div className=\"item-right\">\n                    {important}\n                    {tag}\n                    <span \n                    className=\"remove\"\n                    onClick={()=>this.props.handleRemove(item.id)}>\n                        ✕\n                    </span>\n                </div>\n            </li>\n        )\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: null,\n        \n        }\n    }\n\n    componentDidMount(){\n\n        getTodos((result)=>{\n         \n            this.setState({\n                todos: result\n            })\n        })\n    }\n\n    handleSubmit(task){\n\n        var text = task.text\n        var tag = task.tag \n        var isImportant = task.isImportant \n\n        // on récupère le max id de la liste pour éviter des problèmes lors de la suppression puis de l'ajout d'un item. \n        // sans cela on recréé \n        var maxid = 0;\n        this.state.todos.map(function(obj){     \n            if (obj.id > maxid) maxid = obj.id;    \n        });\n            \n        // on créé un nouvel object item\n        var item = {\n            id: maxid+1,\n            done: false,\n            text: text,\n            tag: tag,\n            important: isImportant\n        }\n\n        // on met à jour le tableau des todo\n        this.setState(prevState => ({\n            todos: [...prevState.todos, item]\n        }))\n\n    }\n\n    handleDone(id){\n        \n        // on créé d'abord une copie du state car un state est censé etre immuable        \n        var todos = this.state.todos\n        console.log(todos)\n        todos.find(item => item.id === id).done = !todos.find(item => item.id === id).done\n\n        // on met à jour le tableau des todo\n        this.setState({\n            todos: todos\n        });\n    }\n\n    handleRemove(id){\n        \n        // on créé d'abord une copie du state car un state est censé etre immuable\n        var todos = this.state.todos\n        var index = todos.findIndex(item => item.id === id)\n        \n        todos.splice(index, 1);\n\n        // on met à jour le tableau des todo\n        this.setState({\n\n            todos: todos\n        });\n    }\n\n    render() {\n            \n        const { todos } = this.state;\n        var list = this.state.todos ? (\n                <TodoList \n                todos={todos} \n                handleDone={(id)=>this.handleDone(id)}\n                handleRemove={(id)=>this.handleRemove(id)}\n                />\n        ) :\n        (\n            <div className=\"loading\">\n                Chargement des taches\n            </div>\n        )\n        return (\n        <div className=\"App\">\n            <div className=\"wrapper\">\n                <img className=\"logo\" src=\"./logo.png\"/>\n                <h1>Entrer une tache</h1>\n                <TodoForm handleSubmit={(value)=>this.handleSubmit(value)}/>\n            \n                {list}\n\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}