{"ast":null,"code":"import _classCallCheck from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/components/TodoForm.js\";\n\n/*  component/TodoForm.js\n    Robin Marillia\n\n    classe qui affiche le formulaire d'upload d'une tache\n*/\nimport React, { Component } from 'react';\nimport '../App.css';\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoForm, _Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n    _this.state = {\n      value: '',\n      isOptionsOpen: false,\n      tagSelection: null,\n      isImportant: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // dès que l'on écrit une lettre on change l'état de value\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // on envoit le texte et les informations du tag au parent\n      var task = {\n        text: this.state.value,\n        tag: this.state.tagSelection,\n        isImportant: this.state.isImportant // on repasse à l'état par défaut \n\n      };\n      this.setState({\n        value: '',\n        isOptionsOpen: false,\n        tagSelection: null,\n        isImportant: false\n      });\n      this.props.handleSubmit(task); // on empeche le rechargement de la page\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleOptions\",\n    value: function handleOptions() {\n      // on affiche ou enlève la fenêtre d'options \n      this.setState(function (prevState) {\n        return {\n          isOptionsOpen: !prevState.isOptionsOpen\n        };\n      });\n    }\n  }, {\n    key: \"handleTagSelection\",\n    value: function handleTagSelection(tag) {\n      // on regarde si on reclic sur un tag ou si on clic sur un nouveau\n      var currentTag = this.state.tagSelection;\n\n      if (currentTag == tag) {\n        // on défocus le tag\n        this.setState({\n          tagSelection: null\n        });\n      } else {\n        // on focus le tag\n        this.setState({\n          tagSelection: tag\n        });\n      }\n    }\n  }, {\n    key: \"handleMarkImportant\",\n    value: function handleMarkImportant(tag) {\n      // on toogle le isImportant\n      this.setState(function (prevState) {\n        return {\n          isImportant: !prevState.isImportant\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // classe pour le toogle de la fenetre options\n      var isOptionsOpen = this.state.isOptionsOpen ? null : \"hide\"; // tableau des tags disponibles \n\n      var tagsArray = ['art', 'courrant', 'travail', 'etudes'];\n      var tags = tagsArray.map(function (tag, index) {\n        // on créé la classe qui permet d'entourer un tag lorsqu'il est séléctionné\n        var isTagSelected = _this2.state.tagSelection === tag ? \"tag-focus\" : null;\n        return React.createElement(\"span\", {\n          key: index,\n          className: isTagSelected + \" tag \" + tag,\n          onClick: function onClick() {\n            return _this2.handleTagSelection(tag);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, tag);\n      });\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Ajouter une tache\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"more-options-button\",\n        onClick: function onClick() {\n          return _this2.handleOptions();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Options \\u25BC\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"div\", {\n        className: \"form-options-container \" + isOptionsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-options-tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Choisir un tag\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, tags)), React.createElement(\"div\", {\n        className: \"form-options-important\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.state.isImportant ? 'important-focus' : null,\n        onClick: function onClick() {\n          return _this2.handleMarkImportant();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Marquer comme important \\u2691\")))));\n    }\n  }]);\n\n  return TodoForm;\n}(Component);\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/components/TodoForm.js"],"names":["React","Component","TodoForm","props","state","value","isOptionsOpen","tagSelection","isImportant","handleChange","bind","handleSubmit","event","setState","target","task","text","tag","preventDefault","prevState","currentTag","tagsArray","tags","map","index","isTagSelected","handleTagSelection","handleOptions","handleMarkImportant"],"mappings":"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","sourcesContent":["/*  component/TodoForm.js\n    Robin Marillia\n\n    classe qui affiche le formulaire d'upload d'une tache\n*/\n\nimport React, { Component } from 'react';\nimport '../App.css';\n\n\nclass TodoForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            isOptionsOpen: false,\n            tagSelection: null,\n            isImportant: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        // dès que l'on écrit une lettre on change l'état de value\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        // on envoit le texte et les informations du tag au parent\n        var task = {\n            text: this.state.value,\n            tag: this.state.tagSelection,\n            isImportant: this.state.isImportant\n        }\n\n        // on repasse à l'état par défaut \n        this.setState({\n            value: '',\n            isOptionsOpen: false,\n            tagSelection: null,\n            isImportant: false\n        })\n        this.props.handleSubmit(task)\n\n        // on empeche le rechargement de la page\n        event.preventDefault();\n    }\n\n    handleOptions(){\n        // on affiche ou enlève la fenêtre d'options \n        this.setState(prevState => ({\n            isOptionsOpen: !prevState.isOptionsOpen\n        }))\n    }\n\n    handleTagSelection(tag){\n\n        // on regarde si on reclic sur un tag ou si on clic sur un nouveau\n        var currentTag = this.state.tagSelection\n        if(currentTag==tag){\n             // on défocus le tag\n            this.setState({\n                tagSelection: null,\n            })\n        }\n        else{\n            // on focus le tag\n            this.setState({\n                tagSelection: tag,\n\n            })\n        }\n        \n    }\n\n    handleMarkImportant(tag){\n        // on toogle le isImportant\n        this.setState(prevState => ({\n            isImportant: !prevState.isImportant\n        }))\n\n    }\n\n    render(){\n        // classe pour le toogle de la fenetre options\n        var isOptionsOpen = this.state.isOptionsOpen ? null : \"hide\"\n\n        // tableau des tags disponibles \n        var tagsArray = ['art', 'courrant', 'travail', 'etudes']\n        var tags = tagsArray.map((tag, index)=>{\n\n            // on créé la classe qui permet d'entourer un tag lorsqu'il est séléctionné\n            var isTagSelected = this.state.tagSelection === tag ? \"tag-focus\" : null\n        \n            return(\n                <span \n                key={index}\n                className={isTagSelected+ \" tag \"+tag}\n                onClick={()=>this.handleTagSelection(tag)}\n                >\n                    {tag}\n                </span>\n        )})\n\n\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-searchBar\">\n\n                    \n                    <input\n                    type=\"text\"\n                    placeholder=\"Ajouter une tache\"\n                    value={this.state.value} \n                    onChange={this.handleChange}\n                    />\n                    <div \n                    className=\"more-options-button\"\n                    onClick={()=>this.handleOptions()}\n                    >\n                    Options ▼\n                    </div>\n                    <button type=\"submit\">+</button>\n\n                </div>\n                <div className={\"form-options-container \"+ isOptionsOpen }>\n                    <div className=\"form-options\">\n                        <div className=\"form-options-tags\">\n                            <p>Choisir un tag</p>\n                            <div>\n                                {tags}\n                            </div>\n                        </div>\n                        <div className=\"form-options-important\">\n                            <span \n                            className={this.state.isImportant ? 'important-focus' : null}\n                            onClick={()=>this.handleMarkImportant()}>\n                                Marquer comme important ⚑\n                            </span>\n                        </div>\n                        \n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}