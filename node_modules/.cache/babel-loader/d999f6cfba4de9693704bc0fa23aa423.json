{"ast":null,"code":"import _toConsumableArray from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport getTodos from './API/getTodos'; // import des composants\n\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      todos: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // on récupère les resultats du fetch une fois que le composant a été monté \n      getTodos(function (result) {\n        // on modifie le state todos en lui donnant les données de l'api\n        _this2.setState({\n          todos: result\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(task) {\n      // récupération des infos\n      var text = task.text;\n      var tag = task.tag;\n      var isImportant = task.isImportant; // on récupère le max id de la liste pour éviter des problèmes lors de la suppression puis de l'ajout d'un item. \n\n      var maxid = 0;\n      this.state.todos.map(function (obj) {\n        if (obj.id > maxid) maxid = obj.id;\n      }); // on créé un nouvel object item\n\n      var item = {\n        id: maxid + 1,\n        done: false,\n        text: text,\n        tag: tag,\n        important: isImportant // on met à jour le tableau des todo\n\n      };\n      this.setState(function (prevState) {\n        return {\n          todos: [].concat(_toConsumableArray(prevState.todos), [item])\n        };\n      });\n    }\n  }, {\n    key: \"handleDone\",\n    value: function handleDone(id) {\n      // on créé d'abord une copie du state car un state est censé etre immuable        \n      var todos = this.state.todos; // on cherche la tache dont l'id est l'argument id\n\n      todos.find(function (item) {\n        return item.id === id;\n      }).done = !todos.find(function (item) {\n        return item.id === id;\n      }).done; // on met à jour le tableau des todo\n\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(id) {\n      // on créé d'abord une copie du state car un state est censé etre immuable\n      var todos = this.state.todos;\n      var index = todos.findIndex(function (item) {\n        return item.id === id;\n      }); // on supprime l'item dont l'id est égal à l'argument id \n\n      todos.splice(index, 1); // on met à jour le tableau des todo\n\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var todos = this.state.todos;\n      var list = this.state.todos ? React.createElement(TodoList, {\n        todos: todos,\n        handleDone: function handleDone(id) {\n          return _this3.handleDone(id);\n        },\n        handleRemove: function handleRemove(id) {\n          return _this3.handleRemove(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Chargement des taches\");\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logo\",\n        src: \"./logo.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Entrer une tache\"), React.createElement(TodoForm, {\n        handleSubmit: function handleSubmit(value) {\n          return _this3.handleSubmit(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), list));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/robinmarillia/Documents/dev/jobs/withings/todolist/src/App.js"],"names":["React","Component","getTodos","TodoList","TodoForm","App","props","state","todos","result","setState","task","text","tag","isImportant","maxid","map","obj","id","item","done","important","prevState","find","index","findIndex","splice","list","handleDone","handleRemove","value","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport getTodos from './API/getTodos'\n\n// import des composants\nimport TodoList from './components/TodoList'\nimport TodoForm from './components/TodoForm'\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: null,\n        \n        }\n    }\n\n    componentDidMount(){\n        // on récupère les resultats du fetch une fois que le composant a été monté \n        getTodos((result)=>{\n            \n            // on modifie le state todos en lui donnant les données de l'api\n            this.setState({\n                todos: result\n            })\n        })\n    }\n\n    handleSubmit(task){\n\n        // récupération des infos\n        var text = task.text\n        var tag = task.tag \n        var isImportant = task.isImportant \n\n        // on récupère le max id de la liste pour éviter des problèmes lors de la suppression puis de l'ajout d'un item. \n        var maxid = 0;\n        this.state.todos.map(function(obj){     \n            if (obj.id > maxid) maxid = obj.id;    \n        });\n            \n        // on créé un nouvel object item\n        var item = {\n            id: maxid+1,\n            done: false,\n            text: text,\n            tag: tag,\n            important: isImportant\n        }\n\n        // on met à jour le tableau des todo\n        this.setState(prevState => ({\n            todos: [...prevState.todos, item]\n        }))\n\n    }\n\n    handleDone(id){\n        \n        // on créé d'abord une copie du state car un state est censé etre immuable        \n        var todos = this.state.todos\n        \n        // on cherche la tache dont l'id est l'argument id\n        todos.find(item => item.id === id).done = !todos.find(item => item.id === id).done\n\n        // on met à jour le tableau des todo\n        this.setState({\n            todos: todos\n        });\n    }\n\n    handleRemove(id){\n        \n        // on créé d'abord une copie du state car un state est censé etre immuable\n        var todos = this.state.todos\n        var index = todos.findIndex(item => item.id === id)\n        \n        // on supprime l'item dont l'id est égal à l'argument id \n        todos.splice(index, 1);\n\n        // on met à jour le tableau des todo\n        this.setState({\n            todos: todos\n        });\n    }\n\n    render() {\n            \n        const { todos } = this.state;\n        var list = this.state.todos ? (\n                <TodoList \n                todos={todos} \n                handleDone={(id)=>this.handleDone(id)}\n                handleRemove={(id)=>this.handleRemove(id)}\n                />\n        ) :\n        (\n            <div className=\"loading\">\n                Chargement des taches\n            </div>\n        )\n        return (\n        <div className=\"App\">\n            <div className=\"wrapper\">\n                <img className=\"logo\" src=\"./logo.png\"/>\n                <h1>Entrer une tache</h1>\n                <TodoForm handleSubmit={(value)=>this.handleSubmit(value)}/>\n            \n                {list}\n\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}